package BasicTask;
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
public class PasswordEncryption {
	 public static SecretKey generateSecretKey() throws Exception {
	        KeyGenerator keyGen = KeyGenerator.getInstance("AES");
	        keyGen.init(256); 
	        return keyGen.generateKey();
	    }

	    
	    public static String encryptPassword(String password, SecretKey secretKey) throws Exception {
	        Cipher cipher = Cipher.getInstance("AES");
	        cipher.init(Cipher.ENCRYPT_MODE, secretKey);
	        byte[] encryptedBytes = cipher.doFinal(password.getBytes());
	        return Base64.getEncoder().encodeToString(encryptedBytes);
	    }

	   
	    public static String decryptPassword(String encryptedPassword, SecretKey secretKey) throws Exception {
	        Cipher cipher = Cipher.getInstance("AES");
	        cipher.init(Cipher.DECRYPT_MODE, secretKey);
	        byte[] decodedBytes = Base64.getDecoder().decode(encryptedPassword);
	        byte[] decryptedBytes = cipher.doFinal(decodedBytes);
	        return new String(decryptedBytes);
	    }

	public static void main(String[] args) {
		 try {
	            String password = "MySecurePassword";
	            
	           
	            SecretKey secretKey = generateSecretKey();
	            
	        
	            String encryptedPassword = encryptPassword(password, secretKey);
	            System.out.println("Encrypted Password: " + encryptedPassword);
	            
	            
	            String decryptedPassword = decryptPassword(encryptedPassword, secretKey);
	            System.out.println("Decrypted Password: " + decryptedPassword);
	            
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	    }
	}
